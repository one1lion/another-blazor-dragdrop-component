@inherits DragAndDropElementBase
@typeparam TItem

<div>
  @if (model is null) {
    if (LoadingTemplate is null) {
      <p>Loading...</p>
    } else {
      @LoadingTemplate
    }
  } else if (Item is null) {
    if (NullItemTemplate is null) {
      <div>&nbsp;</div>
    } else {
      @NullItemTemplate(default(TItem))
    }
  } else {
    if (ItemTemplate is null) {
      <p>@Item.ToString()</p>
    } else {
      @ItemTemplate(Item)
    }
  }
</div>

@code {
  DragAndDropItemViewModel model;

  [Parameter] public TItem Item { get; set; }

  [Parameter] public RenderFragment LoadingTemplate { get; set; }
  [Parameter] public RenderFragment<TItem> NullItemTemplate { get; set; }
  [Parameter] public RenderFragment<TItem> ItemTemplate { get; set; }

  protected override void OnParametersSet() {
    if (model is null) { model = new DragAndDropItemViewModel(); }
    // TODO: Validation: We can throw errors or show messages when some required field is not present, such as AllowedTargetNames
    model.Item = this.Item;
    model.Name = this.Name;
  }
}
